import json
import os
from datetime import datetime

class TaskManager:
    def __init__(self):
        self.tasks = []
        self.file_path = "tasks.json"
        self.load_tasks()

    def load_tasks(self):
        if os.path.exists(self.file_path):
            with open(self.file_path, 'r') as file:
                try:
                    self.tasks = json.load(file)
                except json.JSONDecodeError:
                    # If the file is empty or corrupted, initialize an empty list
                    self.tasks = []
        else:
            # If the file does not exist, initialize an empty list
            self.tasks = []

    def save_tasks(self):
        with open(self.file_path, 'w') as file:
            json.dump(self.tasks, file, indent=4)

    def add_task(self, title, priority, due_date=None):
        if due_date:
            due_date = due_date.strftime("%Y-%m-%d")  # Convert date to string
        new_task = {
        "title": title,
        "priority": priority,
        "completed": False,
        "due_date": due_date
        }
        self.tasks.append(new_task)
        self.save_tasks()


    def remove_task(self, index):
        if 0 <= index < len(self.tasks):
            del self.tasks[index]
            self.save_tasks()

    def complete_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index]["completed"] = True
            self.save_tasks()

    def display_tasks(self):
        if not self.tasks:
            print("No tasks found.")
            return
        
        print("To-Do List:")
        for i, task in enumerate(self.tasks):
            status = "Completed" if task["completed"] else "Not Completed"
            due_date = task["due_date"] if task["due_date"] else "No due date"
            print(f"{i + 1}. {task['title']} - Priority: {task['priority']} - Status: {status} - Due Date: {due_date}")

def main():
    task_manager = TaskManager()

    while True:
        print("\nCommands:")
        print("1. Add Task")
        print("2. Remove Task")
        print("3. Mark Task as Completed")
        print("4. View Tasks")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            title = input("Enter task title: ")
            priority = input("Enter priority (high, medium, low): ")
            due_date = input("Enter due date (YYYY-MM-DD) or leave empty: ")
            if due_date:
                due_date = datetime.strptime(due_date, "%Y-%m-%d").date()
            task_manager.add_task(title, priority, due_date)
            print("Task added successfully!")

        elif choice == '2':
            task_manager.display_tasks()
            index = int(input("Enter the index of the task to remove: ")) - 1
            task_manager.remove_task(index)
            print("Task removed successfully!")

        elif choice == '3':
            task_manager.display_tasks()
            index = int(input("Enter the index of the task to mark as completed: ")) - 1
            task_manager.complete_task(index)
            print("Task marked as completed!")

        elif choice == '4':
            task_manager.display_tasks()

        elif choice == '5':
            print("Exiting...")
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
